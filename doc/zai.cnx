*zai.txt*      Zai.Vim AI 助手 1.0      最近更新: 2025-09-14


                    Zai.Vim AI 助手   使用手册


ZAI.Vim 插件                                            *zai* *zai-plugin*


1. 简介 ................................................ |zai-intro|
2. 安装指南 ............................................ |zai-installation|
3. Zai 配置 ............................................ |zai-config|
4. VIM 命令............................................. |zai-commands|
5. 会话命令 ............................................ |zai-chat-commands|
6. 许可证 .............................................. |zai-license|

==============================================================================
1. 简介                                                 *zai-intro*

Zai.Vim 是一款将 AI 助手直接集成到 Vim 编辑器的插件，管理着同时打开的多个 AI
聊天会话，记录日志，也可以加载日志继续曾经的聊天。切换随意，控制随心。

- 灵活切换模型和提示词
- 附件支持
- 多会话支持
- 会话日志保存、加载以及预览

==============================================================================
2. 安装指南                                             *zai-installation*

2.1 环境要求                                            *zai-requirements*
>
   - Vim 8.0+ 或 Neovim
   - Python 3.6+
   - AI API KEY
     - 例如: DeepSeek API 密钥（设置到`DEEPSEEK_API_KEY`环境变量）
   - 必需Python包：
     - `openai`（缺失时自动安装）
   - 可选 iamcco/markdown-preview.nvim
   - 可选 junegunn/fzf.vim
<

2.2 通过插件管理器安装                                  *zai-plugin-managers*

使用 vim-plug: >
   Plug 'zighouse/zai'
<
使用 Vundle: >
   Plugin 'zighouse/zai'
<
使用 lazy.nvim（Neovim配置示例）: >
   return {
       {
           "zighouse/zai.vim",
           config = function()
              vim.g.zai_default_model = "deepseek-chat"
           end
       }
   }
<
手动安装:

在 Linux/Mac 上的内嵌终端命令窗口上执行的命令：
>
    pip install appdirs chardet openai
    mkdir -p ~/.vim/pack/plugins/start
    cd ~/.vim/pack/plugins/start
    git clone -n --depth=1 https://github.com/zighouse/zai.vim.git
    git checkout
<

在 Windows 上的内嵌终端命令窗口上执行的命令：
>
    pip install appdirs chardet openai
    md %USERPROFILE%\vimfiles\pack\plugins\start
    cd %USERPROFILE%\vimfiles\pack\plugins\start
    git clone -n --depth=1 https://github.com/zighouse/zai.vim.git
    git checkout
<

进入安装目录下执行 `git pull` 即可手动更新。

也可以下载 zip 包
[Zai.Vim](https://github.com/zighouse/zai.vim/archive/refs/heads/main.zip)，
解压后把 zai.vim-main 文件夹放到对应的目录下。

==============================================================================
3. Zai 配置                                             *zai-config*
                                                        *g:zai_log_dir*
g:zai_log_dir           配置日志文件保存路径。

                        默认配置为:
                        * Linux/Mac: `~/.local/share/zai/log`
                        * Windows: `%USERPROFILE%\AppData\Local\zai\log`

                                                        *g:zai_lang*
g:zai_lang              配置 Zai 的界面语言。
                        默认使用英语，或者按用户环境自行选择。
                        如果希望指定使用中文，需要配置为：
>
 let g:zai_lang = 'zh_CN.UTF-8'
<
推荐：在 Windows 上配置新的日志存放路径。Windows 上的默认日志存放路径被系统隐
藏，使用不便利。

                                                        *g:zai_base_url*
g:zai_base_url          配置 AI 服务的 `base-url`。见 |zai-chatcmd-model|.

                                                        *g:zai_api_key_name*
g:zai_api_key_name      配置 AI 服务的 `api-key-name`。见 |zai-chatcmd-model|.
                        连接 AI 服务时需要提供服务接口访问密钥。用户需要在操作
                        系统的环境变量中预先设置可以访问到这个密钥的环境变量。
                        这里的 `api-key-name` 就是这个环境变量的名称。

                  例如: linux 上可在 `~/.bashrc` 中设置环境变量：
>
 DEEPSEEK_API_KEY=sk-********************************
<
                        然后就可以使用 `DEEPSEEK_API_KEY` 来完成这项配置。

                                                        *g:zai_default_model*
g:zai_default_model     配置 AI 服务的缺省模型。见 |zai-chatcmd-model|.

                                                        *g:zai_use_ai*
g:zai_use_ai            配置缺省的 AI 服务。
                        当存在一个配置 AI 助手的 json 文件时，可以使用本这个参
                        数来指定默认应用配置文件中存在的 AI 助手。

                                                        *zai-assistants.json*
AI 助手配置文件的全路径：

* Linux/Mac: ~/.local/share/zai/assistants.json
* Windows: %USERPROFILE%\AppData\Local\Zai\assistants.json

一个典型的 AI 助手配置文件内容如下：
>
 [
     {
         "name": "deepseek",
         "base-url": "https://api.deepseek.com",
         "api-key-name" : "DEEPSEEK_API_KEY",
         "model" : ["deepseek-chat", "deepseek-reasoner"]
     },
     {
         "name": "月之暗面",
         "base-url": "https://api.moonshot.cn/v1",
         "api-key-name" : "MOONSHOT_API_KEY",
         "model" : [
             "kimi-k2-0905-preview",
             "kimi-thinking-preview"
         ]
     },
     {
         "name": "火山方舟",
         "base-url": "https://ark.cn-beijing.volces.com/api/v3",
         "api-key-name" : "VOLCES_API_KEY",
         "model" : [
             "doubao-seed-1-6-250615",
             "doubao-seed-1-6-thinking-250715"
         ]
     },
     {
         "name": "硅基流动",
         "base-url": "https://api.siliconflow.cn",
         "api-key-name" : "SILICONFLOW_API_KEY",
         "model" : [
             "deepseek-ai/DeepSeek-V3.1",
             "deepseek-ai/DeepSeek-R1",
             "moonshotai/Kimi-K2-Instruct-0905",
             "tencent/Hunyuan-MT-7B",
             "inclusionAI/Ling-mini-2.0",
             "ByteDance-Seed/Seed-OSS-36B-Instruct",
             "zai-org/GLM-4.5",
             "Qwen/Qwen3-Coder-480B-A35B-Instruct",
             "Qwen/Qwen3-235B-A22B-Thinking-2507",
             "Qwen/Qwen3-235B-A22B-Instruct-2507",
             "baidu/ERNIE-4.5-300B-A47B",
             "tencent/Hunyuan-A13B-Instruct",
             "MiniMaxAI/MiniMax-M1-80k"
         ]
     }
 ]
<

在按上例提供了 AI 助手配置文件后，下面的例子将缺省应用`硅基流动`的 k2 模型。

>
 let g:zai_use_ai = "硅基流动"
 let g:model = "moonshotai/Kimi-K2-Instruct-0905"
<
上面使用了 AI 助手和模型的名称，也可以用从0开始的索引号。


==============================================================================
4. VIM 命令                                             *zai-commands*

                                                        *:Zai*
:Zai                    打开 Zai 聊天交互界面。
<leader>zo              Normal 模式可用 <leader>zo.

                                                        *:ZaiClose*
:ZaiClose               关闭 Zai 聊天交互界面。
<leader>zX              Normal 模式可用。
:q                      仅 Zai 聊天交互界面可用。
                  注意: 当 Zai 聊天交互界面关闭时，切换到后台运行。

                                                        *:ZaiGo*
:ZaiGo                  发送输入窗口中的内容。
<CR>                    输入窗口 normal 模式可用。

                                                        *zai-ui*
Zai 聊天交互界面由三部分构成：
 - 顶部: 列表窗口，管理聊天会话列表；
 - 中间: 展示窗口，显示聊天交互内容；
 - 底部: 输入窗口，提问及发送命令。
在 Zai 界面上可以使用 Zai 的编辑命令，聊天会话列表以及聊天内容禁止用户做变更。

打开交互界面默认创建第一个 Zai 聊天会话，会话标识从 0 开始。

当用户在输入窗口中编辑好请求内容后，退出 insert 模式后，通过<CR>(回车键)发送。
发送内容后，输入窗口自动清空并等待用户的再次输入。

Zai 会在展示窗口中同时展示用户发送的请求，以及远程助手服务响应或者错误消息。
默认 Zai 打开了日志记录，会在展示内容的最下面提示记录了当前聊天的日志文件的具
体路径。

Zai 除显示交互界面而占据一定的屏幕面积之外，完全独立于 VIM 中加载的其它内容。
用户可以通过 :q 关闭 Zai 界面恢复它所占用的屏幕面积，这时 Zai 并没有暂停而是在
后台继续工作，例如继续接收还没有结束的回答。用户可以在任何时候再次通过 :Zai 命
令打开后台的 Zai 交互界面。

                                                        *:ZaiHelp*
:help                   打开 zai 帮助。仅 Zai 聊天交互界面可用。

                                                        *:ZaiAdd*
:ZaiAdd                 添加选中内容到输入窗口。
<leader>za              visual 模式可用 <leader>za, 从 visual 进入命令模式可用
                        :ZaiAdd.

                        把用户在当前编辑的 VIM 窗口中选中的内容作为一个内容块
                        追加到输入窗口的底部，并把编辑焦点切换到输入窗口的内容
                        块插入处。用户可以在输入窗口做任意编辑或者补充，待描述
                        完整后再发送。

                                                        *:ZaiNew*
:ZaiNew                 新建聊天。仅 Zai 聊天交互界面可用。
:new                    创建一个新的 Zai 聊天会话，并选中这个新聊天，输入窗口
                        中的内容不清除，可以直接发送到新聊天。

                                                        *:ZaiPrev*
:[count]ZaiPrev         选中前面的聊天。仅 Zai 聊天交互界面可用。
:[count]cp              count 是可选参数，表示要选中聊天列表中当前选中项的前面
                        第几项，缺省选中前一项。

                        在列表项中也可以通过移动光标到待选项上，然后通过 <CR>
                        (回车键) 来选中它。

                        当一项聊天会话被选中时，展示窗口将替换为选中聊天的内容，
                        输入窗口中的内容不清除，直接发送给被选中的聊天。

                                                        *:ZaiNext*
:[count]ZaiNext         选中后面的聊天。仅 Zai 聊天交互界面可用。
:[count]cn              count 是可选参数，作用类似于 |:ZaiPrev|。

                                                        *:ZaiGoto*
:ZaiGoto id             选中 id 指定的聊天。仅 Zai 聊天交互界面可用。
:cn id                  id 是必选参数，是列表窗口中列出的聊天的索引。

                                                        *:ZaiPreview*
:ZaiPreview             在浏览器中展示聊天内容。仅 Zai 聊天交互界面可用。
<leader>dp              Zai 聊天交互界面的 normal 模式可用。

                        依赖于 |:MarkdownPreview| 命令，需要插件
                        `iamcco/markdown-preview.nvim`.

                        依赖于聊天的日志功能，关闭了日志的聊天不可用。

                                                        *:ZaiOpenLog*
:ZaiOpenLog             打开聊天日志。
                        当安装有插件 `fzf.vim` 时优先用它来定位聊天日志，
                        否则选用 `:NERDTree` 来打开日志目录。

                        当使用 fzf.vim 来定位时，如果用户没有做 fzf 的键位映射，
                        则默认补充如下映射:
>
     file list:     ctrl-g:first            ctrl-d:last
                    ctrl-b:page-up          ctrl-f:page-down
                    ctrl-j:down             ctrl-k:up
     file preview:  ctrl-h:preview-top      ctrl-l:preview-bottom
                    ctrl-p:preview-page-up  ctrl-n:preview-page-down
                    ctrl-e:preview-up       ctrl-y:preview-down
                    ctrl-/:toggle-preview
<

                                                        *:ZaiGrepLog*
:ZaiGrepLog <pattern>   查找聊天日志。
                        当安装有插件 `fzf.vim` 时可用来漂亮地查找聊天日志，
                        否则选用 `:grep` 结合 `quickfix` 来查找，在 Windows 上使用
                        `findstr`。

                        当使用 fzf.vim 来定位时，键位映射和 |ZaiOpenLog| 同。

                                                        *:ZaiLoad*
:ZaiLoad                把在当前窗口中打开的 Zai 聊天日志加载成聊天上下文。
<leader>zl

                        Zai 可以把曾经记录的聊天会话日志加载到新的聊天中作为上
                        下文，这将会使这个聊天中的 AI 助手在接下来的回答中利用
                        这些信息。用户可以通过这种方式来继续之前没有达到预期的
                        聊天。聊天日志的路径参见 |zai-ui| |zai-log|.

                                                        *:ZaiConfig*
:ZaiConfig              打开 AI 助手配置进行编辑。见 |zai-assistants.json|.

==============================================================================
5. 会话命令                                             *zai-chat-commands*

除了在 Zai 交互界面窗口中使用的 VIM 命令 |zai-commands| 之外，还可以在输入窗口
的待发送内容中使用会话命令 |zai-chat-commands|。

会话命令主要涉及 AI 助手的工作配置。

和 VIM 命令不同，会话命令不由 VIM 的窗口或者缓冲区处理，而是发送给 Zai AI 助手
让它在后台处理的。会话命令可以单独发送给 Zai AI 助手，也可以和用户的请求合并在
一起发送。

会话命令由命令前缀、命令名称、命令参数三部分构成，例如：
>
 :file my-sort.cpp
 |-+-- -+---------
 | |    |
 | |    命令参数
 | |
 | 命令名称
 |
 会话命令前缀字符
<
默认情况下，类似于 VIM 的命令模式类型，使用半角冒号作会话命令前缀，用户可以通
过 |zai-chat-command-prefix| 变更当前会话的命令前缀。

                                                        *zai-chatcmd-preifx*
:->?                    设置当前会话的命令前缀。会话命令 |zai-chat-commands|.
                        仅影响当前会话。把会话命令前缀字符变更为新的字符。
                        
                        默认会话命令前缀字符是 `:`，可以充当前缀的字符有:
>
      : / ~ \ ; ! # $ % & ? @ ^ _ * + = , . < > ` ' " ( ) [ ] { }
<

                                                        *zai-chatcmd-help*
:help                   显示会话命令帮助。会话命令 |zai-chat-commands|.
                        在展示窗口打印会话命令的帮助信息。

                                                        *zai-chatcmd-exit*
:exit                   强制退出远程 AI 服务。会话命令 |zai-chat-commands|.
:quit                   当希望取消连接到远程的 AI 服务时，可以使用 exit 或者
                        quit 会话命令。

                                                        *zai-chatcmd-show*
:show `config`            显示 AI 助手的配置项。会话命令 |zai-chat-commands|.
                        显示内容在展示窗口打印。如果用户没有设置过某项配置，系
                        统可能会打印配置项不存在。

                        可以显示的配置项(config)有:

    `api-key-name`      AI API Key Name                  |zai-apikey|
    `base-url`          AI API Base URL                  |zai-baseurl|
    `model`             AI 系统模型                      |zai-chatcmd-model|
    `prompt`            AI 系统提示词                    |zai-chatcmd-prompt|
    `temperature`       创造性参数，浮点，范围 [0,2]     |zai-chatcmd-params|
    `max-tokens`        AI 最大词元，整数
    `logprobs`          顶部词元概率，浮点，范围[0,20]
    `top-p`             Top-P词元，浮点，范围[0,1]
    `presence-penalty`  重复惩罚，浮点，范围[-2,2]
    `frequence-panelty` 高频惩罚，浮点，范围[-2,2]
    `log-file`          记录当前聊天的日志文件全路径     |zai-log|
    `prefix`            会话命令前缀                     |zai-chatcmd-prefix|

                                                        *zai-chatcmd-file*
:file `file-path`         附加 `file-path` 指定的文本文件到当前聊天的输入请求中用
                        作参考。会话命令 |zai-chat-commands|.
:-file                  清除所有附件。

                  注意: 附加的文本文件会作为 AI 请求输入的一部分，会在 AI 服务
                        中计入输入词元计费。当在聊天中曾经附加过某个文件时，如
                        果想在新的提问中引用它，不必重复附加，只需提及文件名。

                                                        *zai-chatcmd-baseurl*
:base-url `url`           改变当前聊天使用的 AI 服务 base-url。
                        会话命令 |zai-chat-commands|.

                                                        *zai-chatcmd-keyname*
:api-key-name `key-name`  改变当前聊天使用的 API 密钥。
                        会话命令 |zai-chat-commands|.
                  注意: 这里使用的是指向密钥的环境变量的名称，而不是密钥内容。

                                                        *zai-chatcmd-model*
:model `model-name`       指定当前聊天的 AI 模型。会话命令 |zai-chat-commands|.
                        改变当前聊天中使用的 AI 系统模型。

                  注意: 允许改变的模型名称依赖于当前 `base-url` 提供的 AI 服务，
                        这不是 Zai 提供的。

                        以 deepseek 提供的服务为例，
                        对应的 `base-url` 为 https://api.deepseek.com ，提供了
                        两种可选的模型：`deepseek-chat` 和 `deepseek-reasoner`.

                        也可以全局配置 `base-url`、`api-key-name`和`model`。
                  例如: (见 |zai-config|)
>
 let g:zai_base_url = "https://api.deepseek.com"
 let g:zai_api_key_name = "DEEPSEEK_API_KEY"
 let g:zai_default_model = "deepseek-chat"
<
                        以上配置了当创建新聊天时使用的 `base-url` 和
                        `api-key-name` 以及缺省的 AI 模型。
                        之后可以使用 `:model` 会话命令来改变当前聊天的内容，即
                        使已经使用了 `deepseek-chat` 模型做过了一轮交互，也可
                        以继续变更为使用 `deepseek-reasoner` 作为新一轮交
                        互的模型。
>
 :model deepseek-reasoner
<
                        当使用其它 `base-url` 时一般会有不同的模型名称，具体参
                        见服务提供商的 API 文档。又例如，以下为硅基流动做的配
                        置:
>
 let g:zai_base_url = "https://api.siliconflow.cn"
 let g:zai_api_key_name = "SILICONFLOW_API_KEY"
 let g:zai_default_model = "Pro/moonshotai/Kimi-K2-Instruct-0905"
<
                  注意: 当使用 `:use ai` 或者 `g:zai_use_ai` 成功应用了 AI 助
                        手之后，`:model` 会话命令只允许在配置范围内选值。
                        见 |zai-chatcmd-useai|、|g:zai_use_ai|

                                                        *zai-chatcmd-prompt*
:prompt `text`            设置当前聊天新的提示词。会话命令 |zai-chat-commands|.
:-prompt                取消设置过的提示词 (使用 Zai 默认的提示词)。

                        提示词是十分重要的 AI 模型配置，直接影响到 AI 助手提供
                        答案的质量。

                        当需要设置的提示词仅有一行时，可以直接使用单行提示词设
                        置方式来设置，例如：
>
 :prompt 请作为熟悉计算机科技领域的专业翻译为用户提供帮助。
<
                        当需要设置的提示词超过一行时，需要使用块状语法来设置，
                        例如：
>
 :prompt<<EOF
 作为代码专家助手，请按步骤来分析问题。
 在提供解决方案时，请套用格式：
   ### [标题]
   [分步说明]
   ### 总结: [一句话总结核心]
 EOF
<
                                                        *zai-chatcmd-params*
:temperature `float`      设置当前聊天的创造性参数。会话命令 |zai-chat-commands|.
                        浮点，范围[0,2]. 此参数越低，获得的 AI 响应越精准。

:-temperature           取消之前设置过的创造性参数。会话命令 |zai-chat-commands|.

除了 `temperature` 之外，还支持如下模型参数的设置或者取消设置:
    * `top_p`              Top-P词元，浮点，范围[0,1]
    * `max_tokens`         AI 最大词元，整数
    * `presence_penalty`   重复惩罚，浮点，范围[-2,2]
    * `frequency_penalty`  高频惩罚，浮点，范围[-2,2]
    * `logprobs`           顶部词元概率，浮点，范围[0,20]

                                                        *zai-chatcmd-nolog*
:no-log                  关闭聊天日志。会话命令 |zai-chat-commands|.
:-no-log                 取消关闭，即打开聊天日志。
                         关闭了聊天日志之后，将不再把新的内容存入日志。

                   注意: 当前版本关闭了聊天日志之后，不能进行预览。
                         见 |:ZaiPreview|.

                                                        *zai-chatcmd-useai*
:use ai `<name|idx>`                   应用 AI 助手配置文件中的项。
:use ai `<name|idx>` model `<name|idx>`  会话命令 |zai-chat-commands|.
                                     可以使用配置的名称，也可以使用索引。
                                     见 |g:zai_use_ai|、|zai-assistants.json|

                        当使用了 `:use ai` 会话命令成功应用了 AI 助手之后，会
                        影响 `:model` 会话命令，只允许在 AI 助手预先配置的模型
                        列表中选值。见 |zai-chatcmd-model|.

:show ai `[<name|idx>]`   显示 AI 助手的内容。会话命令 |zai-chat-commands|.
                        当没有提供 `<name|idx>` 时，显示当前应用的 AI 助手。
                        见 |zai-chatcmd-useai|.

:list ai                列出可用的 AI 助手。会话命令 |zai-chat-commands|.
                        见|zai-assistants.json|.

==============================================================================
6. 许可证                                               *zai-license*

MIT 许可证发布，详情见：
https://github.com/zighouse/zai/blob/main/LICENSE

 vim:tw=78:ts=8:ft=help:norl:
